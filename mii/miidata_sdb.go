// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package mii

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"golang.org/x/text/encoding/unicode"
)

type MiidataSdb struct {
	HairType           uint8
	MoleEnable         bool
	BodyHeight         uint64
	HairFlip           bool
	BodyWeight         uint64
	SpecialType        bool
	HairColor          uint64
	Gender             bool
	EyeColor           uint64
	EyebrowColor       uint8
	MouthColor         uint8
	FacialHairColor    uint8
	GlassesColor       uint8
	RegionMove         uint64
	EyeType            uint64
	FontRegion         uint64
	MouthType          uint64
	GlassesSize        uint64
	EyeVertical        uint64
	FacialHairMustache uint64
	EyebrowType        uint64
	FacialHairBeard    uint64
	NoseType           uint64
	MouthStretch       uint64
	NoseVertical       uint64
	EyebrowStretch     uint64
	MouthVertical      uint64
	EyeRotation        uint64
	FacialHairVertical uint64
	EyeStretch         uint64
	GlassesVertical    uint64
	EyeSize            uint64
	MoleHorizontal     uint64
	MoleVertical       uint8
	GlassesType        uint8
	FaceType           uint64
	FavoriteColor      uint64
	FaceWrinkles       uint64
	FaceColor          uint64
	EyeHorizontal      uint64
	FaceMakeup         uint64
	EyebrowRotation    uint64
	EyebrowSize        uint64
	EyebrowVertical    uint64
	EyebrowHorizontal  uint64
	MouthSize          uint64
	NoseSize           uint64
	MoleSize           uint64
	FacialHairSize     uint64
	MiiName            string
	MiiId              []uint8
	ChecksumMii        []uint8
	ChecksumConsole    []uint8
	_io                *kaitai.Stream
	_root              *MiidataSdb
	_parent            interface{}
}

func NewMiidataSdb() *MiidataSdb {
	return &MiidataSdb{}
}

func (this *MiidataSdb) Read(io *kaitai.Stream, parent interface{}, root *MiidataSdb) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.HairType = tmp1
	tmp2, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.MoleEnable = tmp2 != 0
	tmp3, err := this._io.ReadBitsIntBe(7)
	if err != nil {
		return err
	}
	this.BodyHeight = tmp3
	tmp4, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.HairFlip = tmp4 != 0
	tmp5, err := this._io.ReadBitsIntBe(7)
	if err != nil {
		return err
	}
	this.BodyWeight = tmp5
	tmp6, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.SpecialType = tmp6 != 0
	tmp7, err := this._io.ReadBitsIntBe(7)
	if err != nil {
		return err
	}
	this.HairColor = tmp7
	tmp8, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.Gender = tmp8 != 0
	tmp9, err := this._io.ReadBitsIntBe(7)
	if err != nil {
		return err
	}
	this.EyeColor = tmp9
	this._io.AlignToByte()
	tmp10, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.EyebrowColor = tmp10
	tmp11, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.MouthColor = tmp11
	tmp12, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.FacialHairColor = tmp12
	tmp13, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.GlassesColor = tmp13
	tmp14, err := this._io.ReadBitsIntBe(2)
	if err != nil {
		return err
	}
	this.RegionMove = tmp14
	tmp15, err := this._io.ReadBitsIntBe(6)
	if err != nil {
		return err
	}
	this.EyeType = tmp15
	tmp16, err := this._io.ReadBitsIntBe(2)
	if err != nil {
		return err
	}
	this.FontRegion = tmp16
	tmp17, err := this._io.ReadBitsIntBe(6)
	if err != nil {
		return err
	}
	this.MouthType = tmp17
	tmp18, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.GlassesSize = tmp18
	tmp19, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.EyeVertical = tmp19
	tmp20, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.FacialHairMustache = tmp20
	tmp21, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.EyebrowType = tmp21
	tmp22, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.FacialHairBeard = tmp22
	tmp23, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.NoseType = tmp23
	tmp24, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.MouthStretch = tmp24
	tmp25, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.NoseVertical = tmp25
	tmp26, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.EyebrowStretch = tmp26
	tmp27, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.MouthVertical = tmp27
	tmp28, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.EyeRotation = tmp28
	tmp29, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.FacialHairVertical = tmp29
	tmp30, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.EyeStretch = tmp30
	tmp31, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.GlassesVertical = tmp31
	tmp32, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.EyeSize = tmp32
	tmp33, err := this._io.ReadBitsIntBe(5)
	if err != nil {
		return err
	}
	this.MoleHorizontal = tmp33
	this._io.AlignToByte()
	tmp34, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.MoleVertical = tmp34
	tmp35, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.GlassesType = tmp35
	tmp36, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.FaceType = tmp36
	tmp37, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.FavoriteColor = tmp37
	tmp38, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.FaceWrinkles = tmp38
	tmp39, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.FaceColor = tmp39
	tmp40, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.EyeHorizontal = tmp40
	tmp41, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.FaceMakeup = tmp41
	tmp42, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.EyebrowRotation = tmp42
	tmp43, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.EyebrowSize = tmp43
	tmp44, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.EyebrowVertical = tmp44
	tmp45, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.EyebrowHorizontal = tmp45
	tmp46, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.MouthSize = tmp46
	tmp47, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.NoseSize = tmp47
	tmp48, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.MoleSize = tmp48
	tmp49, err := this._io.ReadBitsIntBe(4)
	if err != nil {
		return err
	}
	this.FacialHairSize = tmp49
	this._io.AlignToByte()
	tmp50, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp50 = tmp50
	tmp51, err := kaitai.BytesToStr(tmp50, unicode.UTF16(unicode.LittleEndian, unicode.IgnoreBOM).NewDecoder())
	if err != nil {
		return err
	}
	this.MiiName = tmp51
	for i := 0; i < int(16); i++ {
		_ = i
		tmp52, err := this._io.ReadU1()
		if err != nil {
			return err
		}
		this.MiiId = append(this.MiiId, tmp52)
	}
	for i := 0; i < int(2); i++ {
		_ = i
		tmp53, err := this._io.ReadU1()
		if err != nil {
			return err
		}
		this.ChecksumMii = append(this.ChecksumMii, tmp53)
	}
	for i := 0; i < int(2); i++ {
		_ = i
		tmp54, err := this._io.ReadU1()
		if err != nil {
			return err
		}
		this.ChecksumConsole = append(this.ChecksumConsole, tmp54)
	}
	return err
}

/**
 * Hair type. Ranges from 0 to 131. Not ordered the same as visible in editor.
 */

/**
 * Enable mole. 0 = no, 1 = yes.
 */

/**
 * Body height. Ranges from 0 to 127, short to tall. In the Mii editor, pressing right will add 1 to this value, and pressing left will subtract 1, allowing for precise editing.
 */

/**
 * Flip hair. 0 = no, 1 = yes.
 */

/**
 * Body weight. Ranges from 0 to 127, small to large. In the Mii editor, pressing right will add 1 to this value, and pressing left will subtract 1, allowing for precise editing.
 */

/**
 * Toggle if the Mii is a Special Mii. Completely unused functionality. Does not allow editing the Mii, or using the Mii in games.
 */

/**
 * Hair color. Ranges from 0 to 99. Not ordered the same as visible in editor.
 */

/**
 * Mii gender. 0 = male, 1 = female.
 */

/**
 * Eye color. Ranges from 0 to 99. Not ordered the same as visible in editor.
 */

/**
 * Eyebrow color. Ranges from 0 to 99. Not ordered the same as visible in editor.
 */

/**
 * Mouth color. The default colors are ordered the same as visible in editor, ranging from 19 to 23. The custom colors are not and range from 0 to 99.
 */

/**
 * Facial hair color. Ranges from 0 to 99. Not ordered the same as visible in editor.
 */

/**
 * Glasses color. Ranges from 0 to 99. Not ordered the same as visible in editor.
 */

/**
 * Currently unknown.
 */

/**
 * Eye type. Ranges from 0 to 59. Not ordered the same as visible in editor.
 */

/**
 * Font region. 0 = USA + PAL + JPN, 1 = CHN, 2 = KOR, 3 = TWN.
 */

/**
 * Mouth type. Ranges from 0 to 35. Not ordered the same as visible in editor.
 */

/**
 * Glasses size. Ranges from 0 to 7, small to big.
 */

/**
 * Eye Y (vertical) position. Ranges from 18 to 0, low to high.
 */

/**
 * Mustache type. Ranges from 0 to 5.
 */

/**
 * Eyebrow type. Ranges from 0 to 23. Not ordered the same as visible in editor.
 */

/**
 * Beard type. Ranges from 0 to 5.
 */

/**
 * Nose type. Ranges from 0 to 17. Not ordered the same as visible in editor.
 */

/**
 * Mouth stretch. Ranges from 0 to 6, small to big.
 */

/**
 * Nose Y (vertical) position. Ranges from 18 to 0, low to high.
 */

/**
 * Eyebrow stretch. Ranges from 0 to 6, small to big.
 */

/**
 * Mouth Y (vertical) position. Ranges from 18 to 0, low to high.
 */

/**
 * Eye rotation. Ranges from 0 to 7, down to up. Note that some eye types have a default rotation.
 */

/**
 * Mustache Y (vertical) position. Ranges from 22 to 0, low to high.
 */

/**
 * Eye stretch. Ranges from 0 to 6, small to big.
 */

/**
 * Glasses Y (vertical) position. Ranges from 20 to 0, low to high.
 */

/**
 * Eye size. Ranges from 0 to 7, small to big.
 */

/**
 * Mole X (horizontal) position. Ranges from 0 to 16, left to right.
 */

/**
 * Mole Y (vertical) position. Ranges from 30 to 0, low to high.
 */

/**
 * Glasses type. Ranges from 0 to 19. Not ordered the same as visible in editor.
 */

/**
 * Face shape. Ranges from 0 to 11. Not ordered the same as visible in editor.
 */

/**
 * Favorite color. Ranges from 0 to 11.
 */

/**
 * Face wrinkles. Ranges from 0 to 11.
 */

/**
 * Skin color. Ranges from 0 to 9. Not ordered the same as visible in editor.
 */

/**
 * Eye X (horizontal) distance. Ranges from 0 to 12, close to far.
 */

/**
 * Face makeup. Ranges from 0 to 11.
 */

/**
 * Eyebrow rotation. Ranges from 0 to 11, down to up. Note that some eye types have a default rotation.
 */

/**
 * Eyebrow size. Ranges from 0 to 8, small to big.
 */

/**
 * Eyebrow Y (vertical) position. Ranges from 15 to 0, low to high.
 */

/**
 * Eyebrow X (horizontal) distance. Ranges from 0 to 12, close to far.
 */

/**
 * Mouth size. Ranges from 0 to 8, small to big.
 */

/**
 * Nose size. Ranges from 0 to 8, small to big.
 */

/**
 * Mole size. Ranges from 0 to 8, small to big.
 */

/**
 * Mustache size. Ranges from 0 to 8, small to big.
 */

/**
 * Mii name. Can be up to 10 characters long.
 */

/**
 * Unique Mii identifier. Randomly generated. Make sure that the leftmost bit in byte 9 of the Mii ID is set to 1, as otherwise, the Mii will be deemed invalid and your Mii DB will be deleted on console boot.
 */

/**
 * A checksum (CRC-16/XMODEM) on the Mii data (all previous data in the file).
 */

/**
 * A checksum (CRC-16/XMODEM) on both the previous Mii data/checksum, and the device's console ID (stored separately). Seems to end up generating the same thing per-console, though.
 */
